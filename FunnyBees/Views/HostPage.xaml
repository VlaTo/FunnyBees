<Page
    x:Class="FunnyBees.Views.HostPage"
    
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:cmd="using:LibraProgramming.Windows.Commands"
    xmlns:ux="using:LibraProgramming.Windows.UI.Xaml"
    xmlns:uxc="using:LibraProgramming.Windows.UI.Xaml.Primitives.Commanding"
    xmlns:uxt="using:LibraProgramming.Windows.UI.Xaml.StateTriggers"
    xmlns:views="using:FunnyBees.Views"

    mc:Ignorable="d">
    <Page.Resources>
        <Style
            x:Key="SystemAssetsFontIconStyle"
            TargetType="FontIcon">
            <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
            <Setter Property="Foreground" Value="{ThemeResource AppBarItemForegroundThemeBrush}" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style
            x:Key="MenuPaneRadioButtonStyle"
            TargetType="RadioButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{ThemeResource SystemBaseMediumColor}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="RadioButton">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="48" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="48" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="20" />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <Style
                                        TargetType="Rectangle"
                                        x:Name="FocusVisual">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="StrokeDashArray" Value="1,1" />
                                        <Setter Property="StrokeEndLineCap" Value="Square" />
                                    </Style>
                                </Grid.Resources>
                                <Grid
                                    x:Name="NotCheckedBackground"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3">
                                    <Rectangle
                                        x:Name="PressedBackground"
                                        Fill="{StaticResource NavButtonPressedBackgroundBrush}"
                                        Visibility="Collapsed"
                                    />
                                    <Rectangle
                                        x:Name="HoverBackground"
                                        Fill="{StaticResource NavButtonHoverBackgroundBrush}"
                                        Visibility="Collapsed"
                                    />
                                </Grid>
                                <Grid
                                    x:Name="CheckedBackground"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="3"
                                    Background="{StaticResource NavButtonCheckedBackgroundBrush}"
                                    Visibility="Collapsed">
                                    <Rectangle
                                        x:Name="CheckedPressedBackground"
                                        Fill="{StaticResource NavButtonCheckedPressedBackgroundBrush}"
                                        Visibility="Collapsed"
                                    />
                                    <Rectangle
                                        x:Name="CheckedHoverBackground"
                                        Fill="{StaticResource NavButtonCheckedHoverBackgroundBrush}"
                                        Visibility="Collapsed"
                                    />
                                </Grid>
                                <Rectangle
                                    x:Name="FocusVisualWhite"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
                                    StrokeDashOffset="1.5"
                                    Style="{StaticResource FocusVisual}"
                                />
                                <Rectangle
                                    x:Name="FocusVisualBlack"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
                                    StrokeDashOffset="0.5"
                                    Style="{StaticResource FocusVisual}"
                                />
                                <ContentPresenter
                                    x:Name="NixonGlyph"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Content="{TemplateBinding Content}"
                                />
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    AutomationProperties.AccessibilityView="Raw"
                                    Grid.Column="1"
                                    Grid.Row="0"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Tag}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                />
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedHoverBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedPressedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="NixonGlyph" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource RadioButtonContentDisabledForegroundThemeBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckedBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualWhite" Storyboard.TargetProperty="Opacity" To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualBlack" Storyboard.TargetProperty="Opacity" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="PointerFocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style
            x:Key="SpecialMenuPaneRadioButtonStyle"
            TargetType="RadioButton"
            BasedOn="{StaticResource MenuPaneRadioButtonStyle}">
            <Setter Property="Foreground" Value="{ThemeResource SystemListAccentMediumColor}" />
        </Style>
    </Page.Resources>
    <Grid
        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <SplitView
            x:Name="MenuSplitView"
            Grid.Column="0"
            DisplayMode="CompactOverlay"
            IsPaneOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}">
            <SplitView.Pane>
                <RelativePanel
                    x:Name="MenuHostPanel">
                    <ToggleButton
                        x:Name="MenuToggleButton"
                        Style="{StaticResource SymbolButton}"
                        VerticalAlignment="Top"
                        Width="48"
                        Height="48">
                        <ToggleButton.Content>
                            <FontIcon
                                x:Name="HamburgerMenuButton"
                                Style="{StaticResource SystemAssetsFontIconStyle}"
                                Glyph="{StaticResource HamburgerButtonGlyph}"
                                FontSize="16"
                                Margin="2"
                            />
                        </ToggleButton.Content>
                    </ToggleButton>
                    <RadioButton
                        x:Uid="HomeMenuButton"
                        x:Name="HomeMenuButton"
                        RelativePanel.Below="{Binding ElementName=MenuToggleButton}"
                        Style="{StaticResource MenuPaneRadioButtonStyle}"
                        Width="{Binding Path=OpenPaneLength, ElementName=MenuSplitView}">
                        <RadioButton.Command>
                            <cmd:NavigateToPageCommand TargetPage="views:MainPage" />
                        </RadioButton.Command>
                        <RadioButton.Content>
                            <FontIcon
                                Style="{StaticResource SystemAssetsFontIconStyle}"
                                Glyph="{StaticResource HomeButtonGlyph}"
                                FontSize="16"
                            />
                        </RadioButton.Content>
                    </RadioButton>
                    <RadioButton
                        x:Uid="OptionsMenuButton"
                        x:Name="OptionsMenuButton"
                        RelativePanel.AlignBottomWithPanel="True"
                        Style="{StaticResource SpecialMenuPaneRadioButtonStyle}"
                        Width="{Binding Path=OpenPaneLength, ElementName=MenuSplitView}">
                        <RadioButton.Command>
                            <cmd:NavigateToPageCommand TargetPage="views:OptionsPage" />
                        </RadioButton.Command>
                        <RadioButton.Content>
                            <FontIcon
                                Style="{StaticResource SystemAssetsFontIconStyle}"
                                Glyph="{StaticResource GearButtonGlyph}"
                                FontSize="16"
                            />
                        </RadioButton.Content>
                    </RadioButton>
                </RelativePanel>
            </SplitView.Pane>
            <!--<Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="48" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <RelativePanel
                    x:Name="PageHeader"
                    Grid.Row="0"
                    Background="{ThemeResource ApplicationPageHeaderBackgroundThemeBrush}">
                    <TextBlock
                        x:Name="PageTitle"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.AlignTopWithPanel="True"
                        Style="{StaticResource PageTitleTextBlockStyle}"
                    />
                    <ContentPresenter
                        x:Name="PageHeaderCustomContent"
                        RelativePanel.RightOf="PageTitle"
                        RelativePanel.AlignTopWithPanel="True"
                        RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                    />
                </RelativePanel>-->
                <Frame
                    x:Name="ContentFrame"
                    Navigated="OnFrameNavigated"
                />
            <!--</Grid>-->
        </SplitView>
        <ux:CustomDialog
            Title="User Interaction Dialog #1"
            IsOpen="False"
            MaxDialogWidth="700">
            <ux:CustomDialog.Actions>
                <uxc:PredefinedDialogAction Action="Ok" />
                <uxc:PredefinedDialogAction Action="Cancel" />
            </ux:CustomDialog.Actions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock
                    Grid.Row="0"
                    TextWrapping="Wrap">
                    <Span>
                        Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt
                        ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci
                        tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.
                    </Span>
                    <Span>
                        Duis autem vel eum iriure dolor in hendrerit in vulputate velit esse molestie consequat, vel illum
                        dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim qui blandit
                        praesent luptatum zzril delenit augue duis dolore te feugait nulla facilisi. Nam liber tempor cum
                        soluta nobis eleifend option congue nihil imperdiet doming id quod mazim placerat facer possim assum.
                    </Span>
                </TextBlock>
                <ComboBox
                    Grid.Row="1"
                    SelectedIndex="0"
                    Margin="0,20,0,0"
                    MinWidth="200">
                    <x:String>Lorem ipsum dolor</x:String>
                    <x:String>Consectetuer adipiscing</x:String>
                    <x:String>Laoreet dolore magna</x:String>
                </ComboBox>
            </Grid>
        </ux:CustomDialog>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutStates">
                <VisualState>
                    <VisualState.StateTriggers>
                        <uxt:AdaptiveSizeStateTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MenuSplitView.DisplayMode" Value="CompactOverlay" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>



